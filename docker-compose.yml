version: '3.8'

x-app-service: &default-app
  build: .
  command: ''
  environment:
    - NODE_ENV=production
    - MONGO_URL=mongodb://mongo:27017/mooc-backend
    - JWT_SECRET=bea1e719c22341c09d43fdef68d420495a060670c00a4c8099d542c0391035f1
    - RABBITMQ_HOSTNAME=rabbitmq
    - CORS_ORIGIN=https://challenges.rubenruizpedreira.es
  depends_on:
    - mongo
    # - kibana
    # - elasticsearch
  volumes:
    - .:/code:delegated
    # - node_modules:/code/node_modules:delegated

services:
  app:
    <<: *default-app

  mooc-backend:
    <<: *default-app
    command: bash -c "npm run build && npm run start:mooc:backend"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongo:27017/mooc-backend
      - JWT_SECRET=bea1e719c22341c09d43fdef68d420495a060670c00a4c8099d542c0391035f1
      - RABBITMQ_HOSTNAME=rabbitmq
      - CORS_ORIGIN=*
    ports:
      - 5001:5001

  mooc-followers:
    <<: *default-app
    command: bash -c "npm run build && npm run start:followers:backend"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongo:27017/followers-backend
      - RABBITMQ_HOSTNAME=rabbitmq
      - CORS_ORIGIN=*
    ports:
      - 5002:5002

  mooc-posts:
    <<: *default-app
    command: bash -c "npm run build && npm run start:posts:backend"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongo:27017/posts-backend
      - RABBITMQ_HOSTNAME=rabbitmq
      - CORS_ORIGIN=*
    ports:
      - 5003:5003

  mongo:
    image: mongo:5.0.0
    environment:
      - MONGO_URL=mongodb://mongo:27017/dev
    volumes:
      - ./data/mongo:/data/db:delegated
    ports:
      - 27017:27017

  rabbitmq:
    image: 'rabbitmq:3.8-management'
    ports:
      - 5672:5672
      - 15672:15672

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
  #   container_name: codely-elasticsearch
  #   environment:
  #     - node.name=codely-elasticsearch
  #     - discovery.type=single-node #Elasticsearch forms a single-node cluster
  #     - bootstrap.memory_lock=true # might cause the JVM or shell session to exit if it tries to allocate more memory than is available!
  #     - 'ES_JAVA_OPTS=-Xms2048m -Xmx2048m'
  #   ulimits:
  #     memlock:
  #       soft: -1 # The memlock soft and hard values configures the range of memory that ElasticSearch will use. Setting this to â€“1 means unlimited.
  #       hard: -1
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   ports:
  #     - '9200:9200'

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.8.1
  #   container_name: codely-kibana
  #   environment:
  #     ELASTICSEARCH_URL: http://codely-elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://codely-elasticsearch:9200
  #   ports:
  #     - 5601:5601

volumes:
  node_modules:
  esdata:
    driver: local
